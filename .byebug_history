exit
price['duration'] = distance_of_time_in_words(Time.now, Time.now + price['duration'])
price
price_estimate['duration']
price_estimate['duration'] = distance_of_time_in_words(Time.now, Time.now + price_estimate['duration'])
ride['duration'] = distance_of_time_in_words(Time.now, Time.now + ride['duration'])
ride['duration'] = distance_of_time_in_words(Time.now, Time.now + ride['duration']))
      price.merge!('estimated_uber_arrival' => distance_of_time_in_words(Time.now, Time.now + trip_duration))
trip_duration = time_estimate_response.times[i]['estimate']
price.merge!('estimated_uber_arrival' => trip_duration(time_estimate_response.times[i]['estimate']))
price.merge!('estimated_uber_arrival' => time_estimate_response.times[i]['estimate'])
price['estimated_uber_arrival']
price
exit
price_estimate_response
exit
time_estimate_response.times.first
price_estimate_response.prices.first
time_estimate_response.times.count
time_estimate_response.times
time_estimate_response
time_estimate_response.class
price_estimate_response.prices.count
price_estimate_response.prices
price_estimate_response.class.prices
price_estimate_response.class
price_estimate_response
exit
ride_estimates.prices.exit
ride_estimates.prices.class
ride_estimates.prices
ride_estimates.first
ride_estimates.methods
ride_estimates.class
ride_estimates
start_lat
exit
@uber_estimate
exit
@uber_estimate.uber_arrival_estimates
@uber_estimate.ride_estimates
@uber_estimate
exit
@info.uber_arrival_estimates
@info.ride_estimates
@ride_estimates
@info
@info.instance_variables
@info.attributes
@info.ride_estimate
@info.class
@info
exit
@uber_estimate
exit
@uber_estimate.ride_estimates
@uber_estimate.ride_estimate
@uber_estimate
@google_estimate
exit
@google_estimate
exit
@uber_estimate
next
@uber_estimate
exit
next
ride_estimates
exit
next
ride_estimates
exit
next
next 
ride_estimates
exit
next
ride_estimates
exit
structure_uber_arrival_estimates(uber_arrival_estimates)
ride_estimates
exit
ride_estimates
exit
@uber_arrival_estimates
uber_arrival_estimates
ride_estimates
next
uber_arrival_estimates
ride_estimates
exit
@info
exit
@info.ride_estimates
@info
exit
ride_estimates.class
ride_estimates
ride_estimates.first
ride_estimates
uber_arrival_estimates
exit
@uber_arrival_estimates.count
@uber_arrival_estimates
exit
uber_arrival_estimates.times.count
uber_arrival_estimates.times
uber_arrival_estimates
exit
response.body
exit
next
current_path
page
exit
estimate.prices.count
estimate.prices.class
estimate.prices
estimate
exit
response
service.response
estimate
exit
service.response
response
exit
service
service.response
response
exit
estimate.routes.first['legs'].first['steps'].count
estimate.routes.first['legs'].first['steps']
estimate.routes.first['legs'].first
estimate.routes.first['legs']['steps']
estimate.routes.first['legs']['steps'].count
estimate.routes.first['legs'].count
estimate.routes.first.legs
estimate.routes.legs
estimate.routes.elgs
estimate.routes['legs
estimate.routes['legs'].count
estimate.routes['leg'].count
estimate.routes['leg']count
estimate.routes.legs.count
estimate.routes.count
estimate.class
estimate
exit
ride['duration']
exit
ride
exit
@uber_estimate.ride_estimates.first.minimum
@uber_estimate.ride_estimates.first
@uber_estimate.ride_estimates.count
@uber_estimate.ride_estimates
exit
@uber_estimate.ride_estimates.first
@uber_estimate.ride_estimates.each
@uber_estimate.ride_estimates
@uber_estimate.class
@uber_estimate.each
@uber_estimate
@uber_estimates
exit
@uber_estimate.uberx.localized_display_name
@uber_estimate.uberx
@uber_estimate
@uber_estimate.uberx.minimum
@uber_estimate.uberx
exit
build_object(rides.first)
rides.first
rides.count
rides
exit
@uberx.minimum
@uberx
exit
xexir
prices.prices.fifth
prices.prices.fourth
prices.prices.third
prices.prices.second
prices.prices.first
prices.prices
prices.first
prices
exit
a.prices.countexit
a.prices.count
a.prices.first
a.prices
a
exit
build_object(parse(response))
parse(response)
response.body
parse(response.body)
response.body
response
repsonse
build_object(parse(response.body))
build_object(a)
a = JSON.parse(response.body)
JSON.parse(response.body)
response.body
exit
response.body
exit
end_lat
end_lng
start_lng
start_lat
exit
end_lng
end_lat
start_lng
start_lat
exit
response.body
response
exit
start_lat
exit
start_long_and_lat
exit
request
response.body
exit
response.body
response
exit
exi
google_directions.directions_info['end_location']['lat']
google_directions.directions_info['end_location']
google_directions.directions_info.end_location
google_directions.directions_info
google_directions.start_lat
google_directions.start_location
google_directions.class
google_directions
exit
@google_directions['routes']
@google_directions.routes
exit
@google_directions['routes']
@google_directions.routes
@google_directions.attributes
@google_directions.instance_methods
@google_directions.keys
@google_directions
exit
a.html_instructions
a = build_object(directions_info['steps'].first)
