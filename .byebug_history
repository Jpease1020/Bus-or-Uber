exit
current_user.user_trips.uber_trips.uber_trips_total_cost
current_user.user_trips.uber_trips.sum('cost')
current_user.user_trips.uber_trips
exit
current_user.user_trips
exit
current_user.user_trips.uber_trips
current_user.user_trips
current_user
exit
trip_duration / 60
trip_duration
price_estimate
exit
b.prices.first['duration'] / 60
b.prices.first['duration']
b.prices.first[:duration]
b.prices[:duration]
b.prices['duration']
b.prices['duration]'
b.prices.duration
b.duration
b = build_object(parse(response))
response
exit
User.all
User.last
exit
@google_estimate.end_address
@google_estimate
exit
@google_estimate
exit
next
exit
UserTrip.new
next
convert_params
exit
@uber_trips
current_user.user_trips.where('trip_type LIKE ?', "%uber%")
current_user.user_trips
current_user
@user_trips
exit
current_user.user_trips.first
current_user
@uber_trips.count
@uber_trips
exit
current_user.user_trips.first
current_user
UserTrip.first.user
UserTrip.first
exit
UserTrip.first
current_user.user_trips.first
current_user.user_trips.count
current_user.user_trips,count
current_user.user_trips
current_user
UserTrip.first
@uber_trips.first
@uber_trips
exit
user_trip
exit
attributes
exit
attributes
attributes['trip_duration'] = attributes['trip_duration'].to_i
"12".to_i
attributes['trip_duratio'] = attributes['trip_duratio'].to_i
attributes
user_trip_params
    user_trip_params["trip_distance"] = user_trip_params["trip_distance"].to_i 
attributes
exit
attributes
exit
attributes.merge('trip_cost' => (high + low) / 2)
attributes << 'trip_cost'
attributes['trip_cost']
low
high
attributes
exit
high
attributes
exit
user_trip_params[:trip_high_estimate]
user_trip_params.trip_high_estimate
user_trip_params['trip_high_estimate']
user_trip_params['trip_high_estimat']
user_trip_params.trip_high_estimate
user_trip_params
user_trip+params
user+params
low
attributes['trip_low_estimate']
attributes[:trip_low_estimate]
attributes['trip_price_estimate']
attributes[:trip_price_estimate]
exit
attributes[:trip_price_estimate]
attributes
exit
attributes
attrubites
exit
attrubites
exit
attrubites
attributes
exit
a
a.delete("trip_low_estimate")
a
a = user_trip_params.to_h
user_trip_params.to_h
user_trip_params << "a"
user_trip_params.private_methods
user_trip_params.public_methods
user_trip_params.public_method
user_trip_params.public_instance_methods
user_trip_params.methods
user_trip_params.class
user_trip_params
next
exit
user_trip_params
user_trip_params = user_trip_params.to_h
user_trip_params
user_trip_params.to_h.delete('trip_high_estimate')
user_trip_params.to_h.class
user_trip_params.to_h
user_trip_params.class
user_trip_params
user_trip_params.remove('trip_high_estimate')
user_trip_params.delete('trip_high_estimate')
user_trip_params.delete!('trip_high_estimate')
user_trip_params
a
a = user_trip_params.delete('trip_high_estimate')
user_trip_params
user_trip_params.delete('trip_high_estimate')
user_trip_params
user_trip_params.delete(:trip_high_estimate)
user_trip_params
exit
price_estimate
next
trip_duration
exit
time_estimate_response.times[i]['estimate']
time_estimate_response.times[i]
i
price_estimate
exit
user_trip_params
exit
user_trip_params
exit
params
exit
params
exit
params
exit
params
exit
params[:user_ride]['trip_price_estimate']
params[:user_ride]['trip_type']
params[:user_ride][:trip_type]
params[:user_ride]
params
exit
params
exit
params
exit
params
exit
user_trip_params
exit
price['duration'] = distance_of_time_in_words(Time.now, Time.now + price['duration'])
price
price_estimate['duration']
price_estimate['duration'] = distance_of_time_in_words(Time.now, Time.now + price_estimate['duration'])
ride['duration'] = distance_of_time_in_words(Time.now, Time.now + ride['duration'])
ride['duration'] = distance_of_time_in_words(Time.now, Time.now + ride['duration']))
      price.merge!('estimated_uber_arrival' => distance_of_time_in_words(Time.now, Time.now + trip_duration))
trip_duration = time_estimate_response.times[i]['estimate']
price.merge!('estimated_uber_arrival' => trip_duration(time_estimate_response.times[i]['estimate']))
price.merge!('estimated_uber_arrival' => time_estimate_response.times[i]['estimate'])
price['estimated_uber_arrival']
price
exit
price_estimate_response
exit
time_estimate_response.times.first
price_estimate_response.prices.first
time_estimate_response.times.count
time_estimate_response.times
time_estimate_response
time_estimate_response.class
price_estimate_response.prices.count
price_estimate_response.prices
price_estimate_response.class.prices
price_estimate_response.class
price_estimate_response
exit
ride_estimates.prices.exit
ride_estimates.prices.class
ride_estimates.prices
ride_estimates.first
ride_estimates.methods
ride_estimates.class
ride_estimates
start_lat
exit
@uber_estimate
exit
@uber_estimate.uber_arrival_estimates
@uber_estimate.ride_estimates
@uber_estimate
exit
@info.uber_arrival_estimates
@info.ride_estimates
@ride_estimates
@info
@info.instance_variables
@info.attributes
@info.ride_estimate
@info.class
@info
exit
@uber_estimate
exit
@uber_estimate.ride_estimates
@uber_estimate.ride_estimate
@uber_estimate
@google_estimate
exit
@google_estimate
exit
@uber_estimate
next
@uber_estimate
exit
next
ride_estimates
exit
next
ride_estimates
